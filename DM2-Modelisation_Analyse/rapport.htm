<!DOCTYPE html>

<html>
<head>
    <title>IFT3911 DM2 - Hiv24</title>
    <style type="text/css">
        table
        {
            border: outset 2px black;
            border-collapse: collapse;
        }
        th
        {
            padding-inline: 5px;
            border-bottom: double 2px black;
        }
        td
        {
            padding-inline: 5px;
            border-bottom: solid 1px black;
        }
        .first_col
        {
            border-right: double 2px black;
        }
        .todo
        {
            color: red;
        }
        .extension dt
        {
            margin-left: 25px;
        }
        dl.extension > ol
        {
            margin-left: 25px;
        }
    </style>
</head>
<body>
    <h1 style="text-align: center;">
        IFT 3911 - Devoir 2</h1>

    <h2>
        Information générale</h2>

    <p>
        <span style="font-weight: bold;">Nom: </span>Killian Gervais
        <br />
        <span style="font-weight: bold;">Matricule: </span>1841 
        <br />
        <span style="font-weight: bold;">Courriel: </span>killian.gervais@umontreal.ca
        <br />
        
    </p>

    <p>
        <span style="font-weight: bold;">Nom: </span>Roman Gilles-Lesage
        <br />
        <span style="font-weight: bold;">Matricule: </span>5122
        <br />
        <span style="font-weight: bold;">Courriel: </span>roman.gilles-lesage@umontreal.ca
        <br />
        
    </p>

    <p>
        <span style="font-weight: bold;">Nom: </span>Tobias Lepoutre
        <br />
        <span style="font-weight: bold;">Matricule: </span>7637
        <br />
        <span style="font-weight: bold;">Courriel: </span>tobias.lepoutre@umontreal.ca
        <br />
       
    </p>

    <h2>
        Distribution des tâches</h2>

    <p>
        <span class="todo" style="font-weight: bold;">Soumetteur: </span>
    </p>

    <table class="todo" scellpadding="7px">
        <thead>
            <tr>
                <th class="first_col">
                    Tâche
                </th>
                <th>
                    Killian
                </th>
                <th>
                    Roman
                </th>
                <th>
                    Tobias
                </th>
            </tr>
        </thead>

        <tbody>
            

            <tr>
                <td class="first_col">
                    Réseau Pétri
                </td>
                <td>
                    0%
                </td>
                <td>
                    0%
                </td>
                <td>
                    100%
                </td>
            </tr>
            <tr>
                <td class="first_col">
                    Statechart
                </td>
                <td>
                    0%
                </td>
                <td>
                    100%
                </td>
                <td>
                    0%
                </td>
            </tr>

            <tr>
                <td class="first_col">
                    Révision design
                </td>
                <td>
                    100%
                </td>
                <td>
                    0%
                </td>
                <td>
                    0%
                </td>
            </tr>

            <tr>
                <td class="first_col">
                    Analyse design
                </td>
                <td>
                    %
                </td>
                <td>
                    %
                </td>
                <td>
                    %
                </td>
            </tr>
            
        </tbody>
    </table>

    <h2>Hypothèses</h2>
    <div>
        <h2>Tâche 1 - Réseau de Pétri</h2>
                <p>
            Modélisation du réseau de Pétri réalisé avec PIPE(v4.3.0) :
        </p>
        <img src="Reseau_Petri.png" alt="Réseau de Pétri: Tunnel" width="800">
        </b>
        <p>
            Analyse du réseau de Pétri :
        </p>
        <pre>
On remarque que les places P3(tunnel1) et P6(tunnel2), représentant dont les voitures des voies 1 et 2,
suivent la loi de conservation M(P3(tunnel1)) + M(P6(tunnel2)) = K, où K est inférieure ou égale à 1.
En effet, à l'état initial, on a K=0, puis le modèle suit la séquence de franchissement déterminée <T1,T2,T3,T4>
de façon cyclique tels que:
- T1 ajoute un jeton à P3: K=1
- T2 retire un jeton de P3: K=0
- T3 ajoute un jeton à P6: K=1
- T4 retire un jeton à P6: K=0 (et ainsi de suite...)
Donc on en déduit que seule une voiture peut être à l'intérieur du tunnel à la fois.
        </pre>
        <p>Le système semble équitable. On vérifie cela en dressant le graphe de couverture :</p>
        <img src="Graphe_couverture.png" alt="Réseau de Pétri: Tunnel" width="500">
        <pre>
Effectivement, le système est équitable puisque ce graphe de couverture confirme le fait qu'il y a une alternance
effectuée entre chaque coté du tunnel ne laissant passer qu'une voiture à chaque fois. De plus, cela est toujours vrai 
aussi longtemps que le tunnel respecte ce système cyclique déterminé.

Ainsi, puisque ce réseau ne rencontre jamais de blocage et qu'il peut activer ses transitions indéfiniment,
on en déduit qu'il n'y a pas de famine dans le réseau.
        </pre>
    </div>

    <div>
        <h2>Tâche 2 - Statechart</h2>
        <p>Interprétations de la consigne:</p>
        <ul>
            <li>On considère qu'il faille d'abord ouvrir la porte du micro-onde puis la fermer avant de commencer quelconque manipulation</li>
            <li>On considère que si l'utilisateur se trompe d'input dans la séquence (température ou bien minuterie) il doit appuyer sur stop pour recommencer <br>l'entièreté de la séquence.
                Il n'y a pas de retour en arrière possible si par exemple on voudrait changer la température après avoir rentré le temps.
            </li>
        </ul>
        <img src="statechart.png" alt="statechart" width="500">
    </div>

    <div>
        <h2>Tâche 3 - Révision du design</h2>

        <div>
            <h3>Hypothèses</h3>
            <ul>
                <li>Client possède au moins une carte de crédit</li>
                <li></li>
                <li></li>
            </ul>

            <h3>Diagramme de classe</h3>
            <img src="" alt="Diagramme de classe révisé">
            <ul>
                <li>rajout de id siege?</li>
                <li>fusion Trajet et DescriptionTrajet? Non, retour au modele du diagramme conceptuel; idTrajet:String l'id represente un trajet (origine, depart, autresArrets), le trajet est la realisation de cette itineraire a une certaine date; ajout prix de base trajet pas DescriptionTrajet car peut dependre de la date, ajout id trajet</li>
                <li>etat dans emplacmeent? deja la?</li>
                <li>dispo siege dans section (f,a,p,e) comme attr: classes devienennt literal d'un enum; que faire de MAX_COL MAX_RANG?</li>
                <li>retire ConfirmationPaiement, numConf devient attr de PaiementCredit</li>
                <li>ajout Admin</li>
                <li>prix d'emplacement delete, seulement dans Section. /prix car calcule ne fct de prix:Trajet?</li>
                <li>ajout GUI</li>
                <li>delete CatalogueTYPE</li>
                <li>Vehicule.listeSection -> Vehicule.sections; Vehicule.checkSection() -> Vehicule.getSection(); Vehicule.getVehicule() -> Vehicule.getImmatriculation;</li>
                <li>Reservation.getResDetails():DescriptionTrajet -> :String; on veut plus que juste le tarjet; va probablement go dans un controlleur</li>
                <li>pas de lien entre AdminController - Trajet car dernier peut etre retrouver via DescriptionTrajet</li>
                <li>ajout de controleurs; certaines classes (Client, Reservation,...) agissaient comme controleur en plus d'etre une represenation d'un objet</li>
                <li>deplace MAX_COL/RANG de siege a SectionSiege, creer pour modularite, car propriete de la section</li>
                <li>ajout SectionCabine pour modularite </li>
                <li></li>
                <li>Abstraites: Compagnie, DescriptionTrajet, Installation, Trajet, Vehicule, Section, SectionCabine, SectionSiege, Emplacement</li>
                <li>Catalogue cree DescriptionTrajet et Trajet</li>
                <li>ajout BDController: lien BD et Catalogue</li>
                <li>ajout vehicule a Trajet</li>
                <li>Emplacement: attitreA:Client -> :Reservation, plus logique pour quand place est dispo</li>
                <li></li>
                <li></li>
                <li></li>
                <li></li>
                <li></li>
            </ul>
            <h1>Questions</h1>
            <ul>
                <li>difference sendRes:ConfPai et send:PaiCred?</li>
                <li>Client.recu(..., ..., nomClient) meme chose pour Client.ticket</li>
                <li>Reservation.getPrix(), Reservation.setAvailable(); confirmerRes vs bloquerRes?</li>
                <li>Emplacement.setEmplacement()?</li>
                <li>Section.isBooked()?</li>
                <li>Catalogue.verificationEntrees()?</li>
                <li></li>
                <li></li>
                <li></li>
                <li></li>
            </ul>
        </div>

        <div>
            <h3>Diagrammes de séquence ou de collaboration</h3>
        </div>

        <div>
            <h3>Diagramme de paquets</h3>
        </div>

        <div>
            <h3>Contraintes OCL</h3>
        </div>

        <div>
            <h3>Modules réutilisables</h3>
        </div>
    </div>
    
    <div>
        <h2>Tâche 4 - Analyse de la qualité du design</h2>
    </div>
</body>
</html>
